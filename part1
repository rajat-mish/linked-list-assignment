//ques1
option 1

//ques2
1 3

//ques3

#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
    Node(int value) {
        data = value;
        next = nullptr;
    }
};

class LinkedList {
private:
    Node* head;
    Node* tail;
    
public:
    LinkedList() {
        head = nullptr;
        tail = nullptr;
    }
    
    // Insert function
    void insert(int idx, int value) {
        Node* newNode = new Node(value);
        if (idx == 0) {
            newNode->next = head;
            head = newNode;
            if (tail == nullptr) { 
                tail = newNode; 
            }
        } else {
            Node* temp = head;
            for (int i = 0; temp != nullptr && i < idx - 1; i++) {
                temp = temp->next;
            }
            if (temp != nullptr) {
                newNode->next = temp->next;
                temp->next = newNode;
                if (newNode->next == nullptr) {
                    tail = newNode;
                }
            } else {
                cout << "Index out of bounds!" << endl;
            }
        }
    }
    
    // Delete function
    void deleteNode(int idx) {
        if (head == nullptr) {
            cout << "List is empty!" << endl;
            return;
        }
        
        if (idx == 0) {
            Node* temp = head;
            head = head->next;
            delete temp;
            if (head == nullptr) {
                tail = nullptr;
            }
        } else {
            Node* temp = head;
            for (int i = 0; temp != nullptr && i < idx - 1; i++) {
                temp = temp->next;
            }
            if (temp == nullptr || temp->next == nullptr) {
                cout << "Index out of bounds!" << endl;
                return;
            }
            Node* toDelete = temp->next;
            temp->next = temp->next->next;
            if (temp->next == nullptr) {
                tail = temp;
            }
            delete toDelete;
        }
    }
    
    // Get function
    int get(int idx) {
        Node* temp = head;
        for (int i = 0; temp != nullptr && i < idx; i++) {
            temp = temp->next;
        }
        if (temp != nullptr) {
            return temp->data;
        } else {
            cout << "Index out of bounds!" << endl;
            return -1;
        }
    }
    
    // Display function
    void display() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    LinkedList ll;

    ll.insert(0, 1);  // Insert at index 0
    ll.insert(1, 2);  // Insert at index 1
    ll.insert(2, 3);  // Insert at index 2
    ll.insert(3, 4);  // Insert at index 3
    ll.insert(4, 5);  // Insert at index 4

    cout << "Linked List after insertion: ";
    ll.display();
    
    cout << "Element at index 2: " << ll.get(2) << endl;
    
    ll.deleteNode(2);  // Delete node at index 2
    
    cout << "Linked List after deletion: ";
    ll.display();
    
    return 0;
}
