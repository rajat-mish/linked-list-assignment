//leetcode 2095


class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
          ListNode*fast=head;
            ListNode*slow=head;
       if(head->next==NULL)return NULL;
       
            while( fast!=NULL  ){
                if(fast->next==NULL){
                    break;
                }
                fast=fast->next->next;
                slow=slow->next;
            }
              ListNode*temp=head;
              while(temp->next!=slow){
                  temp=temp->next;
              }
              temp->next=slow->next;
              return head;

    }
};


//leetcode 1669

class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode*temp1=list1;
        ListNode*temp2=list1;
        for(int i=0;i<a-1;i++){
            temp1=temp1->next;
        }
        for(int j=0;j<b+1;j++){
        temp2=temp2->next;
        }
        ListNode*temp3=list2;
        while(temp3->next!=NULL){
            temp3=temp3->next;
        }
        temp1->next=list2;
        temp3->next=temp2;
        return list1;
    }
};
